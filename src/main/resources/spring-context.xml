<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd  
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
	<description>Spring应用程序公共配置 </description>
 	<task:annotation-driven/>  
	<aop:aspectj-autoproxy proxy-target-class="true" />  
	
	<!-- 定义Spring描述Bean的范围  -->
	<context:component-scan base-package="com.lion.echart.**.dao,com.lion.echart.**.logic,com.lion.echart.**.web" />

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/spring-context.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置阿里巴巴Druid数据源-->
	<!-- initialSize   初始化连接大小 -->
	<!-- maxActive  连接池最大使用连接数量 -->
	<!-- maxWait 获取连接最大等待时间 -->
	<!-- timeBetweenEvictionRunsMillis  配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<!-- minEvictableIdleTimeMillis  配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<!-- removeAbandoned  打开removeAbandoned功能 -->
	<!-- removeAbandonedTimeout 1800秒，也就是30分钟 -->
	<!-- logAbandoned 关闭abanded连接时输出错误日志 -->
	<!-- filters 开启Druid的监控统计功能 -->
	<!-- connectProperties  Oracle连接是获取字段注释 -->
	<!--
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="60000" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="stat" />
		<property name="connectProperties">
			<props><prop key="remarksReporting">true</prop></props>
		</property>
	</bean>
	 -->

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />  
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
	<!-- 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="jdbc/OracleDS"></property> 
	</bean>
	 -->
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>  
    </bean>
	 
	<!-- 事务管理器配置, 单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- Bean代理事务 -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> 
        <property name="proxyTargetClass" value="true"/>
        <property name="beanNames">  
            <list>  
                <value>*Service</value>
                <value>*ServiceImpl</value>
            </list>  
        </property>  
        <property name="interceptorNames">  
            <list>  
                <value>transactionInterceptor</value>  
            </list>
        </property>  
    </bean>
    
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">  
        <property name="transactionManager" ref="transactionManager" />  
        <!-- 配置事务属性 -->  
        <property name="transactionAttributes">  
            <props>  
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="inset*">PROPAGATION_REQUIRED</prop><!-- 专门给上传用 -->   
                <prop key="insert*">PROPAGATION_REQUIRED</prop>             
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>  
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="merge*">PROPAGATION_REQUIRED</prop>
                <prop key="edit*">PROPAGATION_REQUIRED</prop>   
                <prop key="do*">PROPAGATION_REQUIRED</prop>
                <prop key="getTaskTransitions">PROPAGATION_REQUIRED</prop> 
                <prop key="getProcess*">PROPAGATION_REQUIRED</prop> 
                <prop key="getNextOperator*">PROPAGATION_REQUIRED</prop>
                <prop key="find*">PROPAGATION_REQUIRED</prop>      
                <prop key="insertPush*">PROPAGATION_REQUIRES_NEW</prop> <!--  PTB数据推送专用 事务分离 -->                                
            </props>  
        </property>
    </bean>
    
   	<bean id="springHelper" class="com.iss.iaf.workflow.support.workflow.engine.JbpmSpringHelper">
		<property name="jbpmCfg" value="jbpm.cfg.xml"></property>
		<property name="sessionFactory">
				<ref local="sessionFactory" />
		</property>		
	</bean>
    
	<!-- Ibatis SqlMap Bean -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"  primary="false">
   		<property name="configLocations">  
            <list>  
				<value>classpath:database/${database.type}/sql-map-config.xml</value>
	       </list>   
        </property>
        <property name="mappingLocations">
        	<list>
        		<value>classpath:database/${database.type}/portal/*.xml</value>
        		<value>classpath:database/${database.type}/system/*.xml</value>
        		<value>classpath:database/${database.type}/business/*.xml</value>
        		<value>classpath:database/${database.type}/job/*.xml</value>
        		<value>classpath:database/${database.type}/report/*.xml</value>
        	</list>
        </property>
		<property name="dataSource" ref="dataSource"/>
		<property name="useTransactionAwareDataSource" value="true" />
	</bean>
	
	<!-- 加载Spring配置文件时，如果Spring配置文件中所定义的Bean类实现了ApplicationContextAware 接口。用于获取ApplicationContext 对象 -->
	<bean id="springContextHolder" class="com.iss.iaf.support.utils.SpringContextHolder" />
	
	<!-- webService接口 -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />  
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />  
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" /> 
</beans>