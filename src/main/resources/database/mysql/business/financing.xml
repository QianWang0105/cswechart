<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comle.financing">
	<select id="getfinancingListData" parameterType="java.util.Map" resultType="java.util.Map" >
		select t.key as costType,t.value as costTypeStr
			,t.maintype as mainType,t.maintypedescribe as mainTypeStr
			,st.writeyear as year,sum(st.money) as total
		from t_s_code t 
		 left join t_f_financingwrite st on t.key = st.costtype
	       and st.writeyear = #{writeyear} and st.isdisabled = 0
		where t.codetype = 'costtype' 
	    group by t.key,t.value,t.maintype,t.maintypedescribe ,st.writeyear
	    order by t.orderby
	</select>
	
	<select id="getflistDetailData" parameterType="java.util.Map" resultType="java.util.Map" >
		select t.*
		from t_f_financingwrite t 
		left join t_s_code st on t.costtype = st.key
			and st.codetype = 'costtype' 
		where t.isdisabled = '0' and t.writeyear = #{year} and t.costtype = #{costtype}
	</select>
	
	<insert id="financingWriteInsert" parameterType="com.lion.echart.financing.entity.FinancingWriteEntity">
           insert into t_f_financingwrite(payfordate, costtype, maintype, contractid, 
           	subofficeid, money, operdate, operuser, writeyear, writemonth, cashierno, voucherno,payee,payeedescribe) 
               values(str_to_date(#{payfordateStr},'%Y-%m-%d %H'), #{costtype}, #{maintype}, #{contractid}, 
            #{subofficeid}, #{money}, now(), #{operuser}, #{writeyear}, #{writemonth}, #{cashierno}, #{voucherno}, #{payee}, #{payeedescribe})
   	</insert>
	
	<update id="financingWriteUpdate" parameterType="com.lion.echart.financing.entity.FinancingWriteEntity">
    	update t_f_financingwrite
    		set 
    		 payfordate = #{payfordate}
    		,costtype = #{costtype}
    		,maintype = #{maintype}
    		,contractid = #{contractid}
    		,subofficeid = #{subofficeid}
    		,money = #{money}
    		,operdate = now()
    		,operuser = #{operuser}
    		,writeyear = #{writeyear}
    		,writemonth = #{writemonth}
    		,cashierno = #{cashierno}
    		,voucherno  = #{voucherno}
    		,payee  = #{payee}
    		,payeedescribe  = #{payeedescribe}
    	where id = #{id}
    </update>
    
	<delete id="financingWriteDelete" parameterType="com.lion.echart.financing.entity.FinancingWriteEntity" >
		update t_f_financingwrite
    		set isdisabled = 1
    	where id = #{id}
    </delete>
    
    <select id="getFinancingReportData" parameterType="java.util.Map" resultType="java.util.Map" >
      select @rownum:=@rownum+1 as rnum,mmtt.* from (select mt.value as costTypeStr,tt.*,ifnull(st4.money,0) as moneysi,
      	(moneyyi+moneyer+moneysan) as moneys from t_s_code mt
		left join ( select t.key
			,ifnull(sum(st1.money),0) as moneyyi,ifnull(sum(st2.money),0) as moneyer
			,ifnull(sum(st3.money),0) as moneysan
		from t_s_code t 
		 left join t_f_financingwrite st1 on t.key = st1.costtype
	       and st1.writeyear = #{year1} and st1.isdisabled = 0
		 left join t_f_financingwrite st2 on t.key = st2.costtype
	       and st2.writeyear = #{year2} and st2.isdisabled = 0
		 left join t_f_financingwrite st3 on t.key = st3.costtype
	       and st3.writeyear = #{year3} and st3.writemonth <![CDATA[<=]]> #{month} and st3.isdisabled = 0
		where t.codetype = 'costtype' 
	    group by t.key ) tt on mt.key = tt.key
		 left join (select costtype,sum(money) as money from t_f_financingwrite
						where writeyear = #{year3} and writemonth = #{month} and isdisabled = 0 group by costtype)
			st4 on tt.key = st4.costtype
			where mt.codetype = 'costtype' 
			order by orderby ) mmtt ,(select @rownum:=0) rt
	</select>
	
    <select id="getFinancingRepairData" parameterType="java.util.Map" resultType="java.util.Map" >
		select t.key,t.value,t.maintype,st.* from t_s_code t
			left join t_f_financingrepair st on t.key = st.ctype
			<if test="classes!=null and classes!=''">
				and st.classes = #{classes}
			</if>
			<if test="year!=null and year!=''">
				and st.year = #{year} 
			</if>
			<if test="month!=null and month!=''">
				and st.month = #{month} 
			</if>
			where t.codetype in ('costtypesub','costtypetax')
			order by t.orderby 
	</select>
	
	<select id="getFinancingRepairSourceMoneyData" parameterType="java.util.Map" resultType="java.util.Map" >
		select * from t_f_financingrepair where 1=1
		<if test="classes!=null and classes!=''">
			and classes = #{classes}
		</if>
		<if test="year!=null and year!=''">
			and year = #{year} 
		</if>
		<if test="month!=null and month!=''">
			and month = #{month} 
		</if>
	</select>
	
	<insert id="FRepairInsert" parameterType="com.lion.echart.financing.entity.FinancingRepairEntity">
           insert into t_f_financingrepair(year,month,ctype,classes,cmoney,summoney,tytmmoney,mmoney,sourcemoney,operdate,operuser) 
               values(#{year},#{month},#{ctype},#{classes},#{cmoney},#{summoney},#{tytmmoney},#{mmoney},#{sourcemoney},#{operdate},#{operuser})
   	</insert>
    
    <update id="FRepairUpdate" parameterType="com.lion.echart.financing.entity.FinancingRepairEntity">
    	update t_f_financingrepair
    	set year = #{year},month = #{month},ctype = #{ctype},classes = #{classes},
    	cmoney = #{cmoney},summoney = #{summoney},tytmmoney = #{tytmmoney},mmoney = #{mmoney},
    	sourcemoney = #{sourcemoney},operdate = #{operdate},operuser = #{operuser}
    	where id = #{id}
    </update>

    <select id="getFinancingReportTwoData" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT typename,ifnull(contractmoney,0) as contractmoney, 
		ifnull(contractfinish,0) as contractfinish,
		ifnull(nytnmmoney,0) as nytnmmoney,
		ifnull(nymonth,0) as nymonth
			FROM (
	SELECT 0 AS orderby,'一、工程合同投资（含监理费用）' AS typename
			,( SELECT SUM(amount) FROM t_c_contract ) AS contractmoney
			,(SELECT SUM(money) FROM t_f_financingwrite) AS contractfinish
			,(SELECT SUM(money) FROM t_f_financingwrite WHERE writeyear = #{year} AND writemonth <![CDATA[<]]> #{month}) AS nytnmmoney
			,(SELECT SUM(money) FROM t_f_financingwrite WHERE writeyear = #{year} AND writemonth = #{month}) AS nymonth
		UNION
		(SELECT ts.subofficeid AS o,
			CONCAT(ts.subofficeid,'.',ts.subofficename,'工程投资')
			,SUM(tc.amount) AS contractmoney
			,SUM(tf.money) AS contractfinish
			,SUM(tfo.money) AS nytnmmoney
			,SUM(tft.money) AS nymonth
			FROM t_s_suboffice ts 
			LEFT JOIN t_c_contract tc ON tc.subofficeid = ts.subofficeid
			LEFT JOIN t_f_financingwrite tf ON tf.subofficeid = ts.subofficeid AND (tf.writeyear <![CDATA[<]]> #{year} 
				OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> 3))
			LEFT JOIN t_f_financingwrite tfo ON tfo.subofficeid = ts.subofficeid AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.subofficeid = ts.subofficeid AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.isonlysubo = '1'
			GROUP BY ts.subofficeid)
		UNION
		(SELECT (CASE ts.key WHEN '03' THEN 7 ELSE 8 END ) AS orderby
			,CONCAT(CASE ts.key WHEN '03' THEN '7' ELSE '8' END ,'.',ts.value) AS typename
			,SUM(tc.amount) AS contractmoney
			,SUM(tf.money) AS contractfinish
			,SUM(tfo.money) AS nytnmmoney
			,SUM(tft.money) AS nymonthfrom
			FROM t_s_code ts 
			LEFT JOIN t_f_financingwrite tf ON ts.key = tf.costtype AND (tf.writeyear <![CDATA[<]]> #{year} 
				OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> 3)) 
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = ts.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = ts.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.codetype = 'costtype' AND ts.key IN ('03','02')
			GROUP BY ts.key)
		UNION
		(SELECT 9 AS orderby, '二、设计费用' AS typename
			,SUM(tf.cmoney),SUM(tf.summoney),SUM(tf.tytmmoney),SUM(tf.mmoney) FROM t_s_code ts
			LEFT JOIN t_f_financingrepair tf ON ts.`key` = tf.ctype
				AND tf.classes = 1 AND tf.`year` = #{year} AND tf.`month` = #{month}
			WHERE ts.codetype = 'costtypesub')
		UNION
			(SELECT (CAST(ts.key AS  SIGNED)+9) AS o,CONCAT(RIGHT(ts.key,1),'.',ts.`value`),tf.cmoney,tf.summoney,tf.tytmmoney,tf.mmoney FROM t_s_code ts
			LEFT JOIN t_f_financingrepair tf ON ts.`key` = tf.ctype
				AND tf.classes = 1 AND tf.`year` = #{year} AND tf.`month` = #{month}
		WHERE ts.codetype = 'costtypesub')
		UNION
		(SELECT 
			 14 AS orderby, '三、征地移民安置补偿、环境保护、水土保持补偿及相关技术服务费用' AS typename
			,SUM(tc.amount) AS contractmoney
			,SUM(tf.money) AS contractfinish
			,SUM(tfo.money) AS nytnmmoney
			,SUM(tft.money) AS nymonth
			FROM t_s_code t
			LEFT JOIN t_f_financingwrite tf ON tf.costtype= t.key AND (tf.writeyear <![CDATA[<]]> #{year} 
				OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> 3))
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = t.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = t.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE t.codetype = 'costtype' AND t.key IN ('05','07','13','06','08','11'))
		UNION
		(SELECT CASE ts.key WHEN '05' THEN 15 WHEN '07' THEN 16
			WHEN '13' THEN 17 WHEN '06' THEN 18 WHEN '08' THEN 19
			ELSE 20 END AS o,
			CONCAT(CASE ts.key WHEN '05' THEN '1' WHEN '07' THEN '2'
			WHEN '13' THEN '3' WHEN '06' THEN '4' WHEN '08' THEN '5' 
			ELSE '6' END ,'.',ts.value) AS typename
			,SUM(tc.amount) AS contractmoney
			,SUM(tf.money) AS contractfinish
			,SUM(tfo.money) AS nytnmmoney
			,SUM(tft.money) AS nymonthfrom
			FROM t_s_code ts 
			LEFT JOIN t_f_financingwrite tf ON ts.key = tf.costtype AND (tf.writeyear <![CDATA[<]]> #{year} 
				OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> 3)) 
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = ts.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = ts.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.codetype = 'costtype' AND ts.key IN ('05','07','13','06','08','11')
			GROUP BY ts.key)
		UNION
		(SELECT
			21 AS orderby, '四、建设管理费用' AS typename
			,SUM(tc.amount) AS contractmoney
			,SUM(tf.money) AS contractfinish
			,SUM(tfo.money) AS nytnmmoney
			,SUM(tft.money) AS nymonthfrom
			FROM t_s_code ts 
			LEFT JOIN t_f_financingwrite tf ON tf.costtype = 12 AND	ts.key = tf.payeedescribe
			 AND (tf.writeyear <![CDATA[<]]> #{year} OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> 3)) 
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = ts.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = ts.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.codetype = 'costtypejgf' )
		UNION 
		(SELECT  (CAST(ts.key AS  SIGNED)+21) AS o,
			CONCAT(RIGHT(ts.key,1),'.',ts.value) AS typename
			,tc.amount AS contractmoney
			,tf.money AS contractfinish
			,tfo.money AS nytnmmoney
			,tft.money AS nymonthfrom
			FROM t_s_code ts 
			LEFT JOIN t_f_financingwrite tf ON tf.costtype = 12 AND	ts.key = tf.payeedescribe
			 AND (tf.writeyear <![CDATA[<]]>  #{year} OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> #{month})) 
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = ts.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = ts.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.codetype = 'costtypejgf' 
			GROUP BY ts.key ORDER BY ts.key)
		UNION 
		(SELECT 
			26 AS orderby, '五、印花税' AS typename
			,SUM(tc.amount) AS contractmoney
			,SUM(tf.money) AS contractfinish
			,SUM(tfo.money) AS nytnmmoney
			,SUM(tft.money) AS nymonthfrom
			FROM t_s_code ts
			LEFT JOIN t_f_financingwrite tf ON tf.costtype = ts.key AND (tf.writeyear <![CDATA[<]]> #{year}
				 OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> #{month}))
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid 
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = ts.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = ts.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.codetype = 'costtype' AND ts.key = '10')
		UNION
		(SELECT 
			27 AS orderby, '六、金中公司清算二阶段费用' AS typename
			,0 AS contractmoney
			,0 AS contractfinish
			,17704.96 AS nytnmmoney
			,0 AS nymonthfrom
			FROM t_s_code ts
			LEFT JOIN t_f_financingwrite tf ON tf.costtype = ts.key AND (tf.writeyear <![CDATA[<]]> #{year} 
				OR (tf.writeyear = #{year} AND tf.writemonth <![CDATA[<]]> #{month}))
			LEFT JOIN t_c_contract tc ON tc.contractid = tf.contractid 
			LEFT JOIN t_f_financingwrite tfo ON tfo.costtype = ts.key AND tfo.writeyear = #{year} AND tfo.writemonth <![CDATA[<]]> #{month}
			LEFT JOIN t_f_financingwrite tft ON tft.costtype = ts.key AND tft.writeyear = #{year} AND tft.writemonth = #{month}
			WHERE ts.codetype = 'costtype' AND ts.key = '10')
	) ttt ORDER BY ttt.orderby
		
	</select>

</mapper>